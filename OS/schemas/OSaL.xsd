<?xml version="1.0" encoding="utf-8"?>
<!-- edited with XMLSpy v2008 (http://www.altova.com) by Gus Gassmann (Dalhousie University) -->
<!-- edited with XMLSPY v2004 rel. 3 U (http://www.xmlspy.com) by Jun Ma (Northwestern University) -->
<!-- schema stage stamping: experiment -> draft -> proposal -> recommendation -> finalization -> version 1.0, 1.1 2.0, ... -->
<xs:schema xmlns="os.optimizationservices.org" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xs="http://www.w3.org/2001/XMLSchema" targetNamespace="os.optimizationservices.org" elementFormDefault="qualified">
	<!--OSaL: version - 2.0.0-->
	<xs:include schemaLocation="OSgL.xsd"/>
	<xs:include schemaLocation="OSnL.xsd"/>
	<xs:element name="osal" type="OSaL">
		<xs:annotation>
			<xs:documentation>proposal</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:complexType name="OSaL">
		<xs:annotation>
			<xs:documentation>proposal</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="analysisHeader" type="AnalysisHeader">
				<xs:annotation>
					<xs:documentation>Proposal</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="analysisData" type="AnalysisData">
				<xs:annotation>
					<xs:documentation>Proposal</xs:documentation>
				</xs:annotation>
			</xs:element>
			<!--xs:element name="math" minOccurs="0"/-->
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="AnalysisHeader">
		<xs:annotation>
			<xs:documentation>draft</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="status" type="AnalysisStatus"/>
			<xs:element name="message" type="xs:string" minOccurs="0"/>
			<xs:element name="serviceURI" type="xs:string" minOccurs="0"/>
			<xs:element name="serviceName" type="xs:string" minOccurs="0"/>
			<xs:element name="instanceName" type="xs:string" minOccurs="0"/>
			<xs:element name="jobID" type="xs:string" minOccurs="0"/>
			<xs:element name="analyzerInvoked" type="xs:string" minOccurs="0"/>
			<xs:element name="timeStamp" type="xs:dateTime" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="AnalysisData">
		<xs:annotation>
			<xs:documentation>draft</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="problem" type="ProblemAnalysis" minOccurs="0">
				<xs:annotation>
					<xs:documentation>draft</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="variables" minOccurs="0">
				<xs:annotation>
					<xs:documentation>draft</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:complexContent>
						<xs:extension base="VariableAnalysis"/>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="objectives" type="ObjectiveAnalysis" minOccurs="0">
				<xs:annotation>
					<xs:documentation>draft</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="constraints" type="ConstraintAnalysis" minOccurs="0">
				<xs:annotation>
					<xs:documentation>draft</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="linearConstraintCoefficient" minOccurs="0">
				<xs:annotation>
					<xs:documentation>draft</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:complexContent>
						<xs:extension base="LinearConstraintCoefficientAnalysis"/>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="quadraticCoefficients" minOccurs="0">
				<xs:annotation>
					<xs:documentation>draft</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:complexContent>
						<xs:extension base="QuadraticCoefficientAnalysis"/>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
			<xs:element name="nonlinearExpressions" type="NonlinearExpressionAnalysis" minOccurs="0">
				<xs:annotation>
					<xs:documentation>draft</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="specialOrderedSets" minOccurs="0">
				<xs:annotation>
					<xs:documentation>experiment</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="matrices" minOccurs="0">
				<xs:annotation>
					<xs:documentation>experiment</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="cones" minOccurs="0">
				<xs:annotation>
					<xs:documentation>experiment</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="matrixProgramming" minOccurs="0">
				<xs:annotation>
					<xs:documentation>experiment</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="disjunctiveInformation" minOccurs="0">
				<xs:annotation>
					<xs:documentation>experiment</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="timeDomain" minOccurs="0">
				<xs:annotation>
					<xs:documentation>experiment</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="robustOptimization" minOccurs="0">
				<xs:annotation>
					<xs:documentation>experiment</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="stochasticInformation" minOccurs="0">
				<xs:annotation>
					<xs:documentation>experiment</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="softConstraints" minOccurs="0">
				<xs:annotation>
					<xs:documentation>experiment</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ambiguityResolution" minOccurs="0">
				<xs:annotation>
					<xs:documentation>experiment</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="modifications" minOccurs="0">
				<xs:annotation>
					<xs:documentation>experiment</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="realTimeData" minOccurs="0">
				<xs:annotation>
					<xs:documentation>experiment</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="userFunctions" minOccurs="0">
				<xs:annotation>
					<xs:documentation>experiment</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="simulations" minOccurs="0">
				<xs:annotation>
					<xs:documentation>experiment</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="xmlData" minOccurs="0">
				<xs:annotation>
					<xs:documentation>experiment</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="AnalysisStatus">
		<xs:annotation>
			<xs:documentation>draft</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="substatus" type="AnalysisSubstatus" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
		<xs:attribute name="type" use="required">
			<xs:simpleType>
				<xs:restriction base="xs:string">
					<xs:enumeration value="error"/>
					<xs:enumeration value="warning"/>
					<xs:enumeration value="normal"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
		<xs:attribute name="description" type="xs:string" use="optional"/>
	</xs:complexType>
	<xs:complexType name="AnalysisSubstatus">
		<xs:annotation>
			<xs:documentation>draft</xs:documentation>
		</xs:annotation>
		<xs:simpleContent>
			<xs:extension base="xs:string">
				<xs:attribute name="name" type="xs:string" use="optional"/>
				<xs:attribute name="description" type="xs:string" use="optional"/>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:complexType name="ProblemAnalysis">
		<xs:annotation>
			<xs:documentation>draft</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="type" minOccurs="0">
				<xs:simpleType>
					<xs:restriction base="xs:string"/>
				</xs:simpleType>
			</xs:element>
			<xs:element name="size" type="ProblemSize" minOccurs="0"/>
			<xs:element name="keyWords" type="ProblemKeyWords" minOccurs="0"/>
			<xs:element name="other" type="OtherAnalysis" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
		<xs:attribute name="numberOfOtherProblemAnalyses" type="xs:nonNegativeInteger" use="optional" default="0">
			<xs:annotation>
				<xs:documentation>If present, must match number of variables in the original optimization instance</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="ProblemSize">
		<xs:simpleContent>
			<xs:extension base="xs:nonNegativeInteger">
				<xs:attribute name="unit" type="GeneralEnumerationStorageUnit" use="optional" default="byte"/>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:complexType name="ProblemKeyWords">
		<xs:annotation>
			<xs:documentation>draft</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="keyWord" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="OtherAnalysis">
		<xs:annotation>
			<xs:documentation>draft</xs:documentation>
		</xs:annotation>
		<xs:attribute name="name" type="xs:string" use="required"/>
		<xs:attribute name="value" type="xs:string" use="optional"/>
		<xs:attribute name="description" type="xs:string" use="optional"/>
	</xs:complexType>
	<xs:complexType name="VariableAnalysis">
		<xs:annotation>
			<xs:documentation>draft</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="type" type="VariableTypeAnalysis" minOccurs="0"/>
			<xs:element name="boundedness" type="VariableBoundednessAnalysis" minOccurs="0"/>
			<xs:element name="linearity" type="VariableLinearityAnalysis" minOccurs="0"/>
			<xs:element name="other" type="OtherVariableAnalysis" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
		<xs:attribute name="numberOfVariables" type="xs:nonNegativeInteger" use="required">
			<xs:annotation>
				<xs:documentation>If present, must match number of variables in the original optimization instance</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="numberOfOtherVariableAnalyses" type="xs:nonNegativeInteger" use="optional" default="0">
			<xs:annotation>
				<xs:documentation>If present, must match number of variables in the original optimization instance</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="VariableTypeAnalysis">
		<xs:annotation>
			<xs:documentation>draft</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="continuous" type="NonNegativeIntVector" minOccurs="0"/>
			<xs:element name="binary" type="NonNegativeIntVector" minOccurs="0"/>
			<xs:element name="integer" type="NonNegativeIntVector" minOccurs="0"/>
			<xs:element name="string" type="NonNegativeIntVector" minOccurs="0"/>
			<xs:element name="semiContinuous" type="NonNegativeIntVector" minOccurs="0"/>
			<xs:element name="semiInteger" type="NonNegativeIntVector" minOccurs="0"/>
			<xs:element name="other" type="NonNegativeIntVectorWithValueAndDescriptionAttribute" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="VariableBoundednessAnalysis">
		<xs:annotation>
			<xs:documentation>draft</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="leftBounded" type="NonNegativeIntVector" minOccurs="0"/>
			<xs:element name="rightBounded" type="NonNegativeIntVector" minOccurs="0"/>
			<xs:element name="bounded" type="NonNegativeIntVector" minOccurs="0"/>
			<xs:element name="equallyBounded" type="NonNegativeIntVector" minOccurs="0"/>
			<xs:element name="unbounded" type="NonNegativeIntVector" minOccurs="0"/>
			<xs:element name="other" type="NonNegativeIntVectorWithValueAndDescriptionAttribute" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="VariableLinearityAnalysis">
		<xs:annotation>
			<xs:documentation>draft</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="linear" type="NonNegativeIntVector" minOccurs="0"/>
			<xs:element name="quadratic" type="NonNegativeIntVector" minOccurs="0"/>
			<xs:element name="nonlinear" type="NonNegativeIntVector" minOccurs="0"/>
			<xs:element name="other" type="NonNegativeIntVectorWithValueAndDescriptionAttribute" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="OtherVariableIndexes">
		<xs:annotation>
			<xs:documentation>draft</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="varIdx" type="NonNegativeIntVector" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
		<xs:attribute name="numberOfVarIdx" type="xs:nonNegativeInteger" use="required"/>
		<xs:attribute name="value" type="xs:string"/>
		<xs:attribute name="description" type="xs:string" use="optional"/>
	</xs:complexType>
	<xs:complexType name="OtherVariableAnalysis">
		<xs:annotation>
			<xs:documentation>draft. numberOfVar is required if there is a var array and numberOfEnumerations is required if there is an enumeration array</xs:documentation>
		</xs:annotation>
		<xs:choice>
			<xs:element name="var" type="OtherVarAnalysis" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>If present, numberOfVar must be set in parent, and the number of entries must agree with numberOfVar</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="enumeration" type="NonNegativeIntVectorWithValueAndDescriptionAttribute" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>If present, numberOfEnumerations must be set in parent, and the number of entries must agree with numberOfEnumerations</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:choice>
		<xs:attribute name="numberOfEnumerations" type="xs:nonNegativeInteger" use="optional" default="0"/>
		<xs:attribute name="numberOfVar" type="xs:nonNegativeInteger" use="optional" default="0"/>
		<xs:attribute name="name" type="xs:string" use="required"/>
		<xs:attribute name="value" type="xs:string" use="optional"/>
		<xs:attribute name="description" type="xs:string" use="optional"/>
	</xs:complexType>
	<xs:complexType name="OtherVarAnalysis">
		<xs:annotation>
			<xs:documentation>draft</xs:documentation>
		</xs:annotation>
		<xs:simpleContent>
			<xs:extension base="xs:string">
				<xs:attribute name="idx" type="xs:nonNegativeInteger" use="optional"/>
				<xs:attribute name="mult" type="xs:positiveInteger" use="optional"/>
				<xs:attribute name="incr" type="xs:int" use="optional" default="0"/>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:complexType name="StandardVariableAnalysis">
		<xs:annotation>
			<xs:documentation>experiment</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="var" minOccurs="0" maxOccurs="unbounded">
				<xs:complexType>
					<xs:complexContent>
						<xs:extension base="StandardVarAnalysis">
							<xs:sequence>
								<xs:element name="other" minOccurs="0" maxOccurs="unbounded">
									<xs:complexType>
										<xs:attribute name="name" type="xs:string" use="required"/>
										<xs:attribute name="description" type="xs:string" use="optional"/>
										<xs:attribute name="value" type="xs:string" use="optional"/>
										<xs:attribute name="lbValue" type="xs:string" use="optional"/>
										<xs:attribute name="ubValue" type="xs:string" use="optional"/>
									</xs:complexType>
								</xs:element>
							</xs:sequence>
						</xs:extension>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="StandardVarAnalysis">
		<xs:annotation>
			<xs:documentation>experiment</xs:documentation>
		</xs:annotation>
		<xs:attribute name="idx" type="xs:nonNegativeInteger" use="required"/>
		<xs:attribute name="init" type="xs:double" use="optional"/>
		<xs:attribute name="initString" type="xs:string" use="optional"/>
		<xs:attribute name="priority" type="xs:int" use="optional"/>
		<xs:attribute name="fixed" type="xs:boolean" use="optional" default="false"/>
		<xs:attribute name="fixedValue" type="xs:double" use="optional"/>
		<xs:attribute name="fixedValueString" type="xs:string" use="optional"/>
	</xs:complexType>
	<xs:complexType name="ObjectiveAnalysis">
		<xs:annotation>
			<xs:documentation>draft</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="linearity" type="ObjectiveLinearityAnalysis" minOccurs="0"/>
			<xs:element name="convexity" type="ObjectiveConvexityAnalysis" minOccurs="0"/>
			<xs:element name="continuity" type="ObjectiveContinuityAnalysis" minOccurs="0"/>
			<xs:element name="differentiability" type="ObjectiveDifferentiabilityAnalysis" minOccurs="0"/>
			<xs:element name="other" type="OtherObjectiveAnalysis" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
		<xs:attribute name="numberOfObjectives" type="xs:nonNegativeInteger" use="required">
			<xs:annotation>
				<xs:documentation>If present, must match number of variables in the original optimization instance</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="numberOfOtherObjectiveAnalyses" type="xs:nonNegativeInteger" use="optional" default="0">
			<xs:annotation>
				<xs:documentation>If present, must match number of variables in the original optimization instance</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="ObjectiveLinearityAnalysis">
		<xs:annotation>
			<xs:documentation>draft</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="constant" type="NegativeIntVector" minOccurs="0"/>
			<xs:element name="linear" type="NegativeIntVector" minOccurs="0"/>
			<xs:element name="quadratic" type="NegativeIntVector" minOccurs="0"/>
			<xs:element name="nonlinear" type="NegativeIntVector" minOccurs="0"/>
			<xs:element name="other" type="NegativeIntVectorWithValueAndDescriptionAttribute" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ObjectiveConvexityAnalysis">
		<xs:annotation>
			<xs:documentation>draft</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="constant" type="NegativeIntVector" minOccurs="0"/>
			<xs:element name="linear" type="NegativeIntVector" minOccurs="0"/>
			<xs:element name="convex" type="NegativeIntVectorWithStrictAttribute" minOccurs="0"/>
			<xs:element name="nonconvex" type="NegativeIntVector" minOccurs="0"/>
			<xs:element name="concave" type="NegativeIntVectorWithStrictAttribute" minOccurs="0"/>
			<xs:element name="nonconcave" type="NegativeIntVector" minOccurs="0"/>
			<xs:element name="notConvexOrConcave" type="NegativeIntVector" minOccurs="0"/>
			<xs:element name="other" type="NegativeIntVectorWithValueAndDescriptionAttribute" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ObjectiveContinuityAnalysis">
		<xs:annotation>
			<xs:documentation>draft</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="continuous" type="NegativeIntVector" minOccurs="0"/>
			<xs:element name="discontinuous" type="NegativeIntVector" minOccurs="0"/>
			<xs:element name="other" type="NegativeIntVector" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ObjectiveDifferentiabilityAnalysis">
		<xs:annotation>
			<xs:documentation>draft</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="differentiable" type="NegativeIntVectorWithOrderAttribute" minOccurs="0"/>
			<xs:element name="nondifferentiable" type="NegativeIntVectorWithOrderAttribute" minOccurs="0"/>
			<xs:element name="other" type="NegativeIntVectorWithValueAndDescriptionAttribute" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<!--
	<xs:complexType name="ObjectiveIndexesWithStrictAttribute">
		<xs:annotation>
			<xs:documentation>draft</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="objIdx" type="ObjectiveIndexesWithStrictAttribute" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
		<xs:attribute name="numberOfObjIdx" type="xs:nonNegativeInteger" use="required"/>
	</xs:complexType>
	<xs:complexType name="ObjIndexesWithStrictAttribute">
		<xs:annotation>
			<xs:documentation>draft</xs:documentation>
		</xs:annotation>
		<xs:simpleContent>
			<xs:extension base="xs:negativeInteger">
				<xs:attribute name="strict" type="xs:boolean" use="optional"/>
				<xs:attribute name="mult" type="xs:positiveInteger" use="optional" default="1"/>
				<xs:attribute name="incr" type="xs:int" use="optional" default="0"/>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:complexType name="ObjectiveIndexesWithOrderAttribute">
		<xs:annotation>
			<xs:documentation>draft</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="objIdx" type="ObjectiveIndexWithOrderAttribute" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
		<xs:attribute name="numberOfObjIdx" type="xs:nonNegativeInteger" use="required"/>
	</xs:complexType>
	<xs:complexType name="ObjectiveIndexWithOrderAttribute">
		<xs:annotation>
			<xs:documentation>draft</xs:documentation>
		</xs:annotation>
		<xs:simpleContent>
			<xs:extension base="xs:negativeInteger">
				<xs:attribute name="order" use="optional" default="1">
					<xs:simpleType>
						<xs:restriction base="xs:int">
							<xs:minInclusive value="1"/>
						</xs:restriction>
					</xs:simpleType>
				</xs:attribute>
				<xs:attribute name="mult" type="xs:positiveInteger" use="optional" default="1"/>
				<xs:attribute name="incr" type="xs:int" use="optional" default="0"/>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
-->
	<xs:complexType name="OtherObjectiveIndexes">
		<xs:annotation>
			<xs:documentation>draft</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="objIdx" type="NegativeIntVector" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
		<xs:attribute name="numberOfObjIdx" type="xs:nonNegativeInteger" use="required"/>
		<xs:attribute name="value" type="xs:string"/>
		<xs:attribute name="description" type="xs:string" use="optional"/>
	</xs:complexType>
	<xs:complexType name="OtherObjectiveAnalysis">
		<xs:annotation>
			<xs:documentation>draft. numberOfObj is required if there is an obj array and numberOfEnumerations is required if there is an enumeration array</xs:documentation>
		</xs:annotation>
		<xs:choice>
			<xs:element name="obj" type="OtherObjAnalysis" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>If present, numberOfObj must be set in parent, and the number of entries must agree with numberOfObj</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="enumeration" type="NegativeIntVectorWithValueAndDescriptionAttribute" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>If present, numberOfEnumerations must be set in parent, and the number of entries must agree with numberOfEnumerations</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:choice>
		<xs:attribute name="numberOfEnumerations" type="xs:nonNegativeInteger" use="optional" default="0"/>
		<xs:attribute name="numberOfObj" type="xs:nonNegativeInteger" use="optional" default="0"/>
		<xs:attribute name="name" type="xs:string" use="required"/>
		<xs:attribute name="value" type="xs:string" use="optional"/>
		<xs:attribute name="description" type="xs:string" use="optional"/>
	</xs:complexType>
	<xs:complexType name="OtherObjAnalysis">
		<xs:annotation>
			<xs:documentation>draft</xs:documentation>
		</xs:annotation>
		<xs:simpleContent>
			<xs:extension base="xs:string">
				<xs:attribute name="idx" type="xs:negativeInteger" use="optional"/>
				<xs:attribute name="mult" type="xs:positiveInteger" use="optional"/>
				<xs:attribute name="incr" type="xs:int" use="optional" default="0"/>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:complexType name="StandardObjectiveAnalysis">
		<xs:annotation>
			<xs:documentation>experiment</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="obj" type="StandardObjAnalysis" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="StandardObjAnalysis">
		<xs:annotation>
			<xs:documentation>experiment</xs:documentation>
		</xs:annotation>
		<xs:attribute name="idx" type="xs:int" use="optional"/>
		<xs:attribute name="lb" type="xs:double" use="optional"/>
		<xs:attribute name="ub" type="xs:double" use="optional"/>
		<xs:attribute name="shape" use="optional" default="linear">
			<xs:simpleType>
				<xs:restriction base="xs:string">
					<xs:enumeration value="linear"/>
					<xs:enumeration value="convex"/>
					<xs:enumeration value="convexAlmostLinear"/>
					<xs:enumeration value="almostConvex"/>
					<xs:enumeration value="concave"/>
					<xs:enumeration value="concaveAlmostLinear"/>
					<xs:enumeration value="almostConcave"/>
					<xs:enumeration value="convexAndConcave"/>
					<xs:enumeration value="convexAndConcaveAlmostLinear"/>
					<xs:enumeration value="unknown"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
		<xs:attribute name="steepness" type="xs:double" use="optional"/>
		<xs:attribute name="monotonicity" use="optional">
			<xs:simpleType>
				<xs:restriction base="xs:string">
					<xs:enumeration value="increasing"/>
					<xs:enumeration value="strictlyIncreasing"/>
					<xs:enumeration value="decreasing"/>
					<xs:enumeration value="strictlyDecreasing"/>
					<xs:enumeration value="constant"/>
					<xs:enumeration value="none"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
		<xs:attribute name="polynomial" use="optional">
			<xs:simpleType>
				<xs:restriction base="xs:boolean"/>
			</xs:simpleType>
		</xs:attribute>
		<xs:attribute name="continuous" use="optional">
			<xs:simpleType>
				<xs:restriction base="xs:boolean"/>
			</xs:simpleType>
		</xs:attribute>
		<xs:attribute name="differentiable" use="optional">
			<xs:simpleType>
				<xs:restriction base="xs:boolean"/>
			</xs:simpleType>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="ConstraintAnalysis">
		<xs:annotation>
			<xs:documentation>draft</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="constraintRegion" type="ConstraintRegionAnalysis" minOccurs="0"/>
			<xs:element name="boundedness" type="ConstraintBoundednessAnalysis" minOccurs="0"/>
			<xs:element name="linearity" type="ConstraintLinearityAnalysis" minOccurs="0"/>
			<xs:element name="convexity" type="ConstraintConvexityAnalysis" minOccurs="0"/>
			<xs:element name="continuity" type="ConstraintContinuityAnalysis" minOccurs="0"/>
			<xs:element name="differentiability" type="ConstraintDifferentiabilityAnalysis" minOccurs="0"/>
			<xs:element name="other" type="OtherConstraintAnalysis" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
		<xs:attribute name="numberOfConstraints" type="xs:nonNegativeInteger" use="required">
			<xs:annotation>
				<xs:documentation>If present, must match number of variables in the original optimization instance</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="numberOfOtherConstraintAnalyses" type="xs:nonNegativeInteger" use="optional" default="0">
			<xs:annotation>
				<xs:documentation>If present, must match number of variables in the original optimization instance</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="ConstraintRegionAnalysis">
		<xs:annotation>
			<xs:documentation>draft</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="convexity" type="ConstraintRegionConvexity" minOccurs="0"/>
			<xs:element name="other" type="OtherConstraintRegionAnalysis" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
		<xs:attribute name="numberOfOtherConstraintRegionAnalyses" type="xs:nonNegativeInteger" use="optional" default="0">
			<xs:annotation>
				<xs:documentation>If present, must match number of variables in the original optimization instance</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="ConstraintRegionConvexity">
		<xs:attribute name="value" type="xs:double" use="optional" default="1"/>
		<xs:attribute name="type" use="optional">
			<xs:simpleType>
				<xs:restriction base="xs:string">
					<xs:enumeration value="linear"/>
					<xs:enumeration value="convex"/>
					<xs:enumeration value="nonconvex"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="OtherConstraintRegionAnalysis">
		<xs:annotation>
			<xs:documentation>draft</xs:documentation>
		</xs:annotation>
		<xs:attribute name="name" type="xs:string" use="required"/>
		<xs:attribute name="value" type="xs:string" use="optional"/>
		<xs:attribute name="description" type="xs:string" use="optional"/>
	</xs:complexType>
	<xs:complexType name="ConstraintBoundednessAnalysis">
		<xs:annotation>
			<xs:documentation>draft</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="leftBounded" type="NonNegativeIntVector" minOccurs="0"/>
			<xs:element name="rightBounded" type="NonNegativeIntVector" minOccurs="0"/>
			<xs:element name="bounded" type="NonNegativeIntVector" minOccurs="0"/>
			<xs:element name="equallyBounded" type="NonNegativeIntVector" minOccurs="0"/>
			<xs:element name="unbounded" type="NonNegativeIntVector" minOccurs="0"/>
			<xs:element name="other" type="NonNegativeIntVectorWithValueAndDescriptionAttribute" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ConstraintLinearityAnalysis">
		<xs:annotation>
			<xs:documentation>draft</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="constant" type="NonNegativeIntVector" minOccurs="0"/>
			<xs:element name="linear" type="NonNegativeIntVector" minOccurs="0"/>
			<xs:element name="quadratic" type="NonNegativeIntVector" minOccurs="0"/>
			<xs:element name="nonlinear" type="NonNegativeIntVector" minOccurs="0"/>
			<xs:element name="other" type="NonNegativeIntVectorWithValueAndDescriptionAttribute" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ConstraintConvexityAnalysis">
		<xs:annotation>
			<xs:documentation>draft</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="constant" type="NonNegativeIntVector" minOccurs="0"/>
			<xs:element name="linear" type="NonNegativeIntVector" minOccurs="0"/>
			<xs:element name="convex" type="NonNegativeIntVectorWithStrictAttribute" minOccurs="0"/>
			<xs:element name="nonconvex" type="NonNegativeIntVector" minOccurs="0"/>
			<xs:element name="concave" type="NonNegativeIntVectorWithStrictAttribute" minOccurs="0"/>
			<xs:element name="nonconcave" type="NonNegativeIntVector" minOccurs="0"/>
			<xs:element name="notConvexOrConcave" type="NonNegativeIntVector" minOccurs="0"/>
			<xs:element name="other" type="NonNegativeIntVectorWithValueAndDescriptionAttribute" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ConstraintContinuityAnalysis">
		<xs:annotation>
			<xs:documentation>draft</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="continuous" type="NonNegativeIntVector" minOccurs="0"/>
			<xs:element name="discontinuous" type="NonNegativeIntVector" minOccurs="0"/>
			<xs:element name="other" type="NonNegativeIntVectorWithValueAndDescriptionAttribute" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ConstraintDifferentiabilityAnalysis">
		<xs:annotation>
			<xs:documentation>draft</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="differentiable" type="NonNegativeIntVectorWithOrderAttribute" minOccurs="0"/>
			<xs:element name="nondifferentiable" type="NonNegativeIntVectorWithOrderAttribute" minOccurs="0"/>
			<xs:element name="other" type="NonNegativeIntVectorWithValueAndDescriptionAttribute" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<!--
	<xs:complexType name="ConstraintIndexesWithStrictAttribute">
		<xs:annotation>
			<xs:documentation>draft</xs:documentation>
		</xs:annotation>
		<xs:simpleContent>
			<xs:extension base="xs:nonNegativeInteger">
				<xs:attribute name="strict" type="xs:boolean" use="optional"/>
				<xs:attribute name="mult" type="xs:positiveInteger" use="optional" default="1"/>
				<xs:attribute name="incr" type="xs:int" use="optional" default="0"/>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:complexType name="ConstraintIndexesWithOrderAttribute">
		<xs:annotation>
			<xs:documentation>draft</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="conIdx" type="ConstraintIndexWithOrderAttribute" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
		<xs:attribute name="numberOfConIdx" type="xs:nonNegativeInteger" use="required"/>
	</xs:complexType>
	<xs:complexType name="ConstraintIndexWithOrderAttribute">
		<xs:annotation>
			<xs:documentation>draft</xs:documentation>
		</xs:annotation>
		<xs:simpleContent>
			<xs:extension base="xs:nonNegativeInteger">
				<xs:attribute name="order" use="optional" default="1">
					<xs:simpleType>
						<xs:restriction base="xs:int">
							<xs:minInclusive value="1"/>
						</xs:restriction>
					</xs:simpleType>
				</xs:attribute>
				<xs:attribute name="mult" type="xs:positiveInteger" use="optional" default="1"/>
				<xs:attribute name="incr" type="xs:int" use="optional" default="0"/>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:complexType name="OtherConstraintIndexes">
		<xs:annotation>
			<xs:documentation>draft</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="conIdx" type="IndexSet" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
		<xs:attribute name="numberOfConIdx" type="xs:nonNegativeInteger" use="required"/>
		<xs:attribute name="value" type="xs:string"/>
		<xs:attribute name="description" type="xs:string" use="optional"/>
	</xs:complexType>
-->
	<xs:complexType name="OtherConstraintAnalysis">
		<xs:annotation>
			<xs:documentation>draft. numberOfCon is required if there is a con array and numberOfEnumerations is required if there is an enumeration array</xs:documentation>
		</xs:annotation>
		<xs:choice>
			<xs:element name="con" type="OtherConAnalysis" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>If present, numberOfCon must be set in parent, and the number of entries must agree with numberOfCon</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="enumeration" type="NonNegativeIntVectorWithValueAndDescriptionAttribute" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>If present, numberOfEnumerations must be set in parent, and the number of entries must agree with numberOfEnumerations</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:choice>
		<xs:attribute name="numberOfEnumerations" type="xs:nonNegativeInteger" use="optional" default="0"/>
		<xs:attribute name="numberOfCon" type="xs:nonNegativeInteger" use="optional" default="0"/>
		<xs:attribute name="name" type="xs:string" use="required"/>
		<xs:attribute name="value" type="xs:string" use="optional"/>
		<xs:attribute name="description" type="xs:string" use="optional"/>
	</xs:complexType>
	<xs:complexType name="OtherConAnalysis">
		<xs:annotation>
			<xs:documentation>draft</xs:documentation>
		</xs:annotation>
		<xs:simpleContent>
			<xs:extension base="xs:string">
				<xs:attribute name="idx" type="xs:nonNegativeInteger" use="optional"/>
				<xs:attribute name="mult" type="xs:positiveInteger" use="optional"/>
				<xs:attribute name="incr" type="xs:int" use="optional" default="0"/>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:complexType name="StandardConstraintAnalysis">
		<xs:annotation>
			<xs:documentation>experiment</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="con" type="StandardConAnalysis" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="StandardConAnalysis">
		<xs:annotation>
			<xs:documentation>experiment</xs:documentation>
		</xs:annotation>
		<xs:attribute name="idx" type="xs:int" use="optional"/>
		<xs:attribute name="lb" type="xs:double" use="optional"/>
		<xs:attribute name="ub" type="xs:double" use="optional"/>
		<xs:attribute name="type" use="optional">
			<xs:simpleType>
				<xs:restriction base="xs:string">
					<xs:enumeration value="geq"/>
					<xs:enumeration value="leq"/>
					<xs:enumeration value="eq"/>
					<xs:enumeration value="leqGeq"/>
					<xs:enumeration value="none"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
		<xs:attribute name="redundant" type="xs:boolean" use="optional" default="false"/>
		<xs:attribute name="priority" type="xs:int" use="optional"/>
		<xs:attribute name="shape" use="optional" default="linear">
			<xs:simpleType>
				<xs:restriction base="xs:string">
					<xs:enumeration value="linear"/>
					<xs:enumeration value="convex"/>
					<xs:enumeration value="convexAlmostLinear"/>
					<xs:enumeration value="almostConvex"/>
					<xs:enumeration value="concave"/>
					<xs:enumeration value="concaveAlmostLinear"/>
					<xs:enumeration value="almostConcave"/>
					<xs:enumeration value="convexAndConcave"/>
					<xs:enumeration value="convexAndConcaveAlmostLinear"/>
					<xs:enumeration value="unknown"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
		<xs:attribute name="linearity" use="optional" default="linear">
			<xs:simpleType>
				<xs:restriction base="xs:string">
					<xs:enumeration value="linear"/>
					<xs:enumeration value="quadratic"/>
					<xs:enumeration value="nonlinear"/>
					<xs:enumeration value="unknown"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
		<xs:attribute name="convexity" use="optional" default="linear">
			<xs:simpleType>
				<xs:restriction base="xs:string">
					<xs:enumeration value="linear"/>
					<xs:enumeration value="convex"/>
					<xs:enumeration value="convexAlmostLinear"/>
					<xs:enumeration value="almostConvex"/>
					<xs:enumeration value="concave"/>
					<xs:enumeration value="concaveAlmostLinear"/>
					<xs:enumeration value="almostConcave"/>
					<xs:enumeration value="convexAndConcave"/>
					<xs:enumeration value="convexAndConcaveAlmostLinear"/>
					<xs:enumeration value="unknown"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
		<xs:attribute name="regionEffect" use="optional" default="linear">
			<xs:simpleType>
				<xs:restriction base="xs:string">
					<xs:enumeration value="linear"/>
					<xs:enumeration value="convex"/>
					<xs:enumeration value="almostConvex"/>
					<xs:enumeration value="nonconvex"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
		<xs:attribute name="effectiveness" type="xs:string" use="optional"/>
		<xs:attribute name="surface" type="xs:double" use="optional"/>
		<xs:attribute name="monotonicity" use="optional">
			<xs:simpleType>
				<xs:restriction base="xs:string">
					<xs:enumeration value="increasing"/>
					<xs:enumeration value="strictlyIncreasing"/>
					<xs:enumeration value="descreasing"/>
					<xs:enumeration value="strictlyDecreasing"/>
					<xs:enumeration value="constant"/>
					<xs:enumeration value="none"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
		<xs:attribute name="polynomial" use="optional">
			<xs:simpleType>
				<xs:restriction base="xs:boolean"/>
			</xs:simpleType>
		</xs:attribute>
		<xs:attribute name="quadratic" use="optional">
			<xs:simpleType>
				<xs:restriction base="xs:boolean"/>
			</xs:simpleType>
		</xs:attribute>
		<xs:attribute name="continuous" use="optional">
			<xs:simpleType>
				<xs:restriction base="xs:boolean"/>
			</xs:simpleType>
		</xs:attribute>
		<xs:attribute name="differentiable" use="optional">
			<xs:simpleType>
				<xs:restriction base="xs:boolean"/>
			</xs:simpleType>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="LinearConstraintCoefficientAnalysis">
		<xs:annotation>
			<xs:documentation>draft</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="size" type="LinearConstraintCoefficientSize" minOccurs="0"/>
			<xs:element name="other" type="OtherAnalysis" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
		<xs:attribute name="numberOfValues" type="xs:nonNegativeInteger" use="optional"/>
		<xs:attribute name="numberOfOtherLinearConstraintCoefficientAnalyses" type="xs:nonNegativeInteger" use="optional" default="0">
			<xs:annotation>
				<xs:documentation>If present, must match number of variables in the original optimization instance</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="LinearConstraintCoefficientSize">
		<xs:annotation>
			<xs:documentation>draft</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="numberOfRows" type="xs:nonNegativeInteger" minOccurs="0"/>
			<xs:element name="numberOfColumns" type="xs:nonNegativeInteger" minOccurs="0"/>
			<xs:element name="numberOfSpecifiedValues" type="xs:nonNegativeInteger" minOccurs="0"/>
			<xs:element name="numberOfNonzeroValues" type="xs:nonNegativeInteger" minOccurs="0"/>
			<xs:element name="density" type="probability" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="QuadraticCoefficientAnalysis">
		<xs:annotation>
			<xs:documentation>draft</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="variables" type="NonNegativeIntVector" minOccurs="0"/>
			<xs:element name="objectives" type="NegativeIntVector" minOccurs="0"/>
			<xs:element name="constraints" type="NonNegativeIntVector" minOccurs="0"/>
			<xs:element name="other" type="OtherAnalysis" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
		<xs:attribute name="numberOfQuadraticTerms" type="xs:nonNegativeInteger" use="required"/>
		<xs:attribute name="numberOfOtherQuadraticCoefficientAnalyses" type="xs:nonNegativeInteger" use="optional" default="0">
			<xs:annotation>
				<xs:documentation>If present, must match number of variables in the original optimization instance</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="NonlinearExpressionAnalysis">
		<xs:annotation>
			<xs:documentation>draft</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="nodes" type="NlNodeAnalysis" minOccurs="0"/>
			<xs:element name="variables" type="NonNegativeIntVector" minOccurs="0"/>
			<xs:element name="objectives" type="NegativeIntVector" minOccurs="0"/>
			<xs:element name="constraints" type="NonNegativeIntVector" minOccurs="0"/>
			<xs:element name="linearity" type="NonlinearExpressionLinearityAnalysis" minOccurs="0"/>
			<xs:element name="convexity" type="NonlinearExpressionConvexityAnalysis" minOccurs="0"/>
			<xs:element name="continuity" type="NonlinearExpressionContinuityAnalysis" minOccurs="0"/>
			<xs:element name="differentiability" type="NonlinearExpressionDifferentiabilityAnalysis" minOccurs="0"/>
			<xs:element name="other" type="OtherNonlinearExpressionAnalysis" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
		<xs:attribute name="numberOfNonlinearExpressions" type="xs:nonNegativeInteger" use="required"/>
		<xs:attribute name="numberOfOtherNonlinearExpressionAnalyses" type="xs:nonNegativeInteger" use="optional" default="0">
			<xs:annotation>
				<xs:documentation>If present, must match number of variables in the original optimization instance</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<xs:complexType name="NlNodeAnalysis">
		<xs:annotation>
			<xs:documentation>draft</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="nodeSet" type="NlNodeSet" minOccurs="0"/>
			<xs:element name="statistics" type="NlNodeStatistics" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="NlNodeSet">
		<xs:annotation>
			<xs:documentation>draft</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="el" type="NlNodeSetElement" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
		<xs:attribute name="NumberOfEl" type="xs:nonNegativeInteger" use="required"/>
	</xs:complexType>
	<xs:complexType name="NlNodeSetElement">
		<xs:annotation>
			<xs:documentation>draft</xs:documentation>
		</xs:annotation>
		<xs:simpleContent>
			<xs:extension base="xs:string">
				<xs:attribute name="count" type="xs:nonNegativeInteger" use="optional"/>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:complexType name="NlNodeStatistics">
		<xs:annotation>
			<xs:documentation>draft</xs:documentation>
		</xs:annotation>
		<xs:all>
			<xs:element name="numberOfExpressionRootNodes" type="xs:nonNegativeInteger" default="0" minOccurs="0"/>
			<xs:element name="numberOfAllNodes" type="xs:nonNegativeInteger" default="0" minOccurs="0"/>
			<xs:element name="numberOfArithmeticFunctions" type="xs:nonNegativeInteger" default="0" minOccurs="0"/>
			<xs:element name="numberOfElementaryFunctions" type="xs:nonNegativeInteger" default="0" minOccurs="0"/>
			<xs:element name="numberOfTrigonometricFunctions" type="xs:nonNegativeInteger" default="0" minOccurs="0"/>
			<xs:element name="numberOfStatisticsAndProbabilityFunctions" type="xs:nonNegativeInteger" default="0" minOccurs="0"/>
			<xs:element name="numberOfTerminalNodes" type="xs:nonNegativeInteger" default="0" minOccurs="0"/>
			<xs:element name="numberOfConstantNodes" type="xs:nonNegativeInteger" default="0" minOccurs="0"/>
			<xs:element name="numberOfVariableNodes" type="xs:nonNegativeInteger" default="0" minOccurs="0"/>
			<xs:element name="numberOfObjectiveNodes" type="xs:nonNegativeInteger" default="0" minOccurs="0"/>
			<xs:element name="numberOfConstraintNodes" type="xs:nonNegativeInteger" default="0" minOccurs="0"/>
			<xs:element name="numberOfParameterNodes" type="xs:nonNegativeInteger" default="0" minOccurs="0"/>
			<xs:element name="numberOfRandomVariableNodes" type="xs:nonNegativeInteger" default="0" minOccurs="0"/>
			<xs:element name="numberOfLogicAndRelationalNodes" type="xs:nonNegativeInteger" default="0" minOccurs="0"/>
			<xs:element name="numberOfMatrixFunctions" type="xs:nonNegativeInteger" default="0" minOccurs="0"/>
			<xs:element name="numberOfQuadraticNodes" type="xs:nonNegativeInteger" default="0" minOccurs="0"/>
			<xs:element name="numberOfSimNodes" type="xs:nonNegativeInteger" default="0" minOccurs="0"/>
			<xs:element name="numberOfUserFNodes" type="xs:nonNegativeInteger" default="0" minOccurs="0"/>
			<xs:element name="numberOfXPathNodes" type="xs:nonNegativeInteger" default="0" minOccurs="0"/>
			<xs:element name="numberOfNoderefNodes" type="xs:nonNegativeInteger" default="0" minOccurs="0"/>
			<xs:element name="numberOfArcRefNodes" type="xs:nonNegativeInteger" default="0" minOccurs="0"/>
			<xs:element name="numberOfComplementsNodes" type="xs:nonNegativeInteger" default="0" minOccurs="0"/>
		</xs:all>
	</xs:complexType>
	<xs:complexType name="NonlinearExpressionBoundednessAnalysis">
		<xs:annotation>
			<xs:documentation>draft</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="leftBounded" type="NonNegativeIntVector" minOccurs="0"/>
			<xs:element name="rightBounded" type="NonNegativeIntVector" minOccurs="0"/>
			<xs:element name="bounded" type="NonNegativeIntVector" minOccurs="0"/>
			<xs:element name="unbounded" type="NonNegativeIntVector" minOccurs="0"/>
			<xs:element name="other" type="NonNegativeIntVectorWithValueAndDescriptionAttribute" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="NonlinearExpressionLinearityAnalysis">
		<xs:annotation>
			<xs:documentation>draft</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="constant" type="NonNegativeIntVector" minOccurs="0"/>
			<xs:element name="linear" type="NonNegativeIntVector" minOccurs="0"/>
			<xs:element name="quadratic" type="NonNegativeIntVector" minOccurs="0"/>
			<xs:element name="nonlinear" type="NonNegativeIntVector" minOccurs="0"/>
			<xs:element name="other" type="NonNegativeIntVectorWithValueAndDescriptionAttribute" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="NonlinearExpressionConvexityAnalysis">
		<xs:annotation>
			<xs:documentation>draft</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="constant" type="NonNegativeIntVector" minOccurs="0"/>
			<xs:element name="linear" type="NonNegativeIntVector" minOccurs="0"/>
			<xs:element name="convex" type="NonNegativeIntVectorWithStrictAttribute" minOccurs="0"/>
			<xs:element name="nonconvex" type="NonNegativeIntVector" minOccurs="0"/>
			<xs:element name="concave" type="NonNegativeIntVectorWithStrictAttribute" minOccurs="0"/>
			<xs:element name="nonconcave" type="NonNegativeIntVector" minOccurs="0"/>
			<xs:element name="notConvexOrConcave" type="NonNegativeIntVector" minOccurs="0"/>
			<xs:element name="other" type="NonNegativeIntVectorWithValueAndDescriptionAttribute" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="NonlinearExpressionContinuityAnalysis">
		<xs:annotation>
			<xs:documentation>draft</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="continuous" type="NonNegativeIntVector" minOccurs="0"/>
			<xs:element name="discontinuous" type="NonNegativeIntVector" minOccurs="0"/>
			<xs:element name="other" type="NonNegativeIntVectorWithValueAndDescriptionAttribute" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="NonlinearExpressionDifferentiabilityAnalysis">
		<xs:annotation>
			<xs:documentation>draft</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="differentiable" type="NonNegativeIntVectorWithOrderAttribute" minOccurs="0"/>
			<xs:element name="nondifferentiable" type="NonNegativeIntVectorWithOrderAttribute" minOccurs="0"/>
			<xs:element name="other" type="NonNegativeIntVectorWithValueAndDescriptionAttribute" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<!--
	<xs:complexType name="NonlinearExpressionIndexes">
		<xs:annotation>
			<xs:documentation>draft</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="nlIdx" type="NonlinearExpressionIndex" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
		<xs:attribute name="numberOfNlIdx" type="xs:nonNegativeInteger" use="required"/>
	</xs:complexType>
	<xs:complexType name="NonlinearExpressionIndex">
		<xs:annotation>
			<xs:documentation>draft</xs:documentation>
		</xs:annotation>
		<xs:simpleContent>
			<xs:extension base="xs:int">
				<xs:attribute name="mult" type="xs:positiveInteger" use="optional" default="1"/>
				<xs:attribute name="incr" type="xs:int" use="optional" default="0"/>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:complexType name="NonlinearExpressionIndexesWithStrictAttribute">
		<xs:annotation>
			<xs:documentation>draft</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="nlIdx" type="NonlinearExpressionIndexWithStrictAttribute" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
		<xs:attribute name="numberOfNlIdx" type="xs:nonNegativeInteger" use="required"/>
	</xs:complexType>
	<xs:complexType name="NonlinearExpressionIndexWithStrictAttribute">
		<xs:annotation>
			<xs:documentation>draft</xs:documentation>
		</xs:annotation>
		<xs:simpleContent>
			<xs:extension base="xs:int">
				<xs:attribute name="strict" type="xs:boolean" use="optional"/>
				<xs:attribute name="mult" type="xs:positiveInteger" use="optional" default="1"/>
				<xs:attribute name="incr" type="xs:int" use="optional" default="0"/>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:complexType name="NonlinearExpressionIndexesWithOrderAttribute">
		<xs:annotation>
			<xs:documentation>draft</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="nlIdx" type="NonlinearExpressionIndexWithOrderAttribute" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
		<xs:attribute name="numberOfNlIdx" type="xs:nonNegativeInteger" use="required"/>
	</xs:complexType>
	<xs:complexType name="NonlinearExpressionIndexWithOrderAttribute">
		<xs:annotation>
			<xs:documentation>draft</xs:documentation>
		</xs:annotation>
		<xs:simpleContent>
			<xs:extension base="xs:int">
				<xs:attribute name="order" use="optional" default="1">
					<xs:simpleType>
						<xs:restriction base="xs:int">
							<xs:minInclusive value="1"/>
						</xs:restriction>
					</xs:simpleType>
				</xs:attribute>
				<xs:attribute name="mult" type="xs:positiveInteger" use="optional" default="1"/>
				<xs:attribute name="incr" type="xs:int" use="optional" default="0"/>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:complexType name="OtherNonlinearExpressionIndexes">
		<xs:annotation>
			<xs:documentation>draft</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="nlIdx" type="IndexSet" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
		<xs:attribute name="numberOfNlIdx" type="xs:nonNegativeInteger" use="required"/>
		<xs:attribute name="value" type="xs:string"/>
		<xs:attribute name="description" type="xs:string" use="optional"/>
	</xs:complexType>
-->
	<xs:complexType name="OtherNonlinearExpressionAnalysis">
		<xs:annotation>
			<xs:documentation>draft. numberOfNl is required if there is an nl array and numberOfEnumerations is required if there is an enumeration array</xs:documentation>
		</xs:annotation>
		<xs:choice>
			<xs:element name="nl" type="OtherNlAnalysis" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>If present, numberOfNl must be set in parent, and the number of entries must agree with numberOfNl</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="enumeration" type="OtherNonlinearExpressionEnumeration" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>If present, numberOfEnumerations must be set in parent, and the number of entries must agree with numberOfEnumerations</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:choice>
		<xs:attribute name="numberOfEnumerations" type="xs:nonNegativeInteger" use="optional" default="0"/>
		<xs:attribute name="numberOfNl" type="xs:nonNegativeInteger" use="optional" default="0"/>
		<xs:attribute name="name" type="xs:string" use="required"/>
		<xs:attribute name="value" type="xs:string" use="optional"/>
		<xs:attribute name="description" type="xs:string" use="optional"/>
	</xs:complexType>
	<xs:complexType name="OtherNonlinearExpressionEnumeration">
		<xs:annotation>
			<xs:documentation>draft</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="nlIdx" type="NonNegativeIntVector" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
		<xs:attribute name="numberOfNlIdx" type="xs:nonNegativeInteger" use="required"/>
		<xs:attribute name="value" type="xs:string"/>
		<xs:attribute name="description" type="xs:string" use="optional"/>
	</xs:complexType>
	<xs:complexType name="OtherNlAnalysis">
		<xs:annotation>
			<xs:documentation>draft</xs:documentation>
		</xs:annotation>
		<xs:simpleContent>
			<xs:extension base="xs:string">
				<xs:attribute name="idx" type="xs:int" use="optional"/>
				<xs:attribute name="mult" type="xs:positiveInteger" use="optional"/>
				<xs:attribute name="incr" type="xs:int" use="optional" default="0"/>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:complexType name="SemidefiniteBlockAnalysis">
		<xs:annotation>
			<xs:documentation>experiment</xs:documentation>
		</xs:annotation>
	</xs:complexType>
	<xs:complexType name="ConeAnalysis">
		<xs:annotation>
			<xs:documentation>experiment</xs:documentation>
		</xs:annotation>
		<xs:sequence maxOccurs="unbounded">
			<xs:element name="rCone" minOccurs="0" maxOccurs="unbounded">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="el" maxOccurs="unbounded">
							<xs:complexType>
								<xs:simpleContent>
									<xs:extension base="xs:nonNegativeInteger">
										<xs:attribute name="mult" type="xs:positiveInteger" use="optional" default="1"/>
										<xs:attribute name="incr" type="xs:int" use="optional" default="0"/>
									</xs:extension>
								</xs:simpleContent>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
					<xs:attribute name="startIndex" type="xs:nonNegativeInteger" use="optional"/>
					<xs:attribute name="indIndex" type="xs:nonNegativeInteger" use="optional"/>
					<xs:attribute name="numberVariables" type="xs:nonNegativeInteger" use="optional"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="quadCone" minOccurs="0" maxOccurs="unbounded">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="el" minOccurs="2" maxOccurs="unbounded">
							<xs:complexType>
								<xs:simpleContent>
									<xs:extension base="xs:nonNegativeInteger">
										<xs:attribute name="mult" type="xs:positiveInteger" use="optional" default="1"/>
										<xs:attribute name="incr" type="xs:int" use="optional" default="0"/>
									</xs:extension>
								</xs:simpleContent>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
					<xs:attribute name="numberVariables" type="xs:nonNegativeInteger" use="optional"/>
					<xs:attribute name="startIndex" type="xs:nonNegativeInteger" use="optional"/>
					<xs:attribute name="indIndex" type="xs:nonNegativeInteger" use="optional"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="rotatedQuadCone" minOccurs="0" maxOccurs="unbounded">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="el" minOccurs="3" maxOccurs="unbounded">
							<xs:complexType>
								<xs:simpleContent>
									<xs:extension base="xs:nonNegativeInteger">
										<xs:attribute name="mult" type="xs:positiveInteger" use="optional" default="1"/>
										<xs:attribute name="incr" type="xs:int" use="optional" default="0"/>
									</xs:extension>
								</xs:simpleContent>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
					<xs:attribute name="numberVariables" type="xs:nonNegativeInteger" use="optional"/>
					<xs:attribute name="startIndex" type="xs:nonNegativeInteger" use="optional"/>
					<xs:attribute name="indIndex" type="xs:nonNegativeInteger" use="optional"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="other" type="OtherAnalysis" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="DisjunctiveInformationAnalysis">
		<xs:annotation>
			<xs:documentation>experiment</xs:documentation>
		</xs:annotation>
	</xs:complexType>
	<xs:complexType name="StageAnalysis">
		<xs:annotation>
			<xs:documentation>experiment</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="other" type="OtherAnalysis" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
		<xs:attribute name="number" type="xs:positiveInteger" use="required"/>
	</xs:complexType>
	<xs:complexType name="StochasticInformationAnalysis">
		<xs:annotation>
			<xs:documentation>experiment</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:choice minOccurs="0">
				<xs:element name="explicitScenario">
					<xs:complexType>
						<xs:choice>
							<xs:element name="scenarioPaths">
								<xs:complexType>
									<xs:sequence>
										<xs:element name="numberRandomElements">
											<xs:complexType>
												<xs:sequence>
													<xs:element name="el" type="xs:nonNegativeInteger"/>
													<xs:element name="bound" type="xs:nonNegativeInteger"/>
													<xs:element name="num" type="xs:nonNegativeInteger"/>
													<xs:element name="node" type="xs:nonNegativeInteger"/>
													<xs:element name="arc" type="xs:nonNegativeInteger"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
									<xs:attribute name="numberPaths" type="xs:positiveInteger" use="required"/>
								</xs:complexType>
							</xs:element>
							<xs:element name="scenarioTree">
								<xs:complexType>
									<xs:sequence>
										<xs:element name="numberRandomElements">
											<xs:complexType>
												<xs:sequence>
													<xs:element name="el" type="xs:nonNegativeInteger"/>
													<xs:element name="bound" type="xs:nonNegativeInteger"/>
													<xs:element name="num" type="xs:nonNegativeInteger"/>
													<xs:element name="node" type="xs:nonNegativeInteger"/>
													<xs:element name="arc" type="xs:nonNegativeInteger"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
									<xs:attribute name="numberNodes" type="xs:positiveInteger" use="required"/>
								</xs:complexType>
							</xs:element>
						</xs:choice>
					</xs:complexType>
				</xs:element>
				<xs:element name="implicitScenario">
					<xs:complexType>
						<xs:sequence>
							<xs:element name="distributions">
								<xs:complexType>
									<xs:sequence>
										<xs:element name="numberDistributions">
											<xs:complexType>
												<xs:sequence>
													<xs:element name="univariate" type="xs:nonNegativeInteger"/>
													<xs:element name="multivariate" type="xs:nonNegativeInteger"/>
													<xs:element name="userDefined" type="xs:nonNegativeInteger"/>
												</xs:sequence>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
								</xs:complexType>
							</xs:element>
							<xs:element name="stochasticElements">
								<xs:complexType>
									<xs:sequence>
										<xs:element name="numberElementGroups">
											<xs:complexType>
												<xs:sequence>
													<xs:element name="singleElements" type="xs:nonNegativeInteger"/>
													<xs:element name="simpleLinearTransformations" type="xs:nonNegativeInteger"/>
													<xs:element name="historyDependences" type="xs:nonNegativeInteger"/>
												</xs:sequence>
												<xs:attribute name="num" type="xs:nonNegativeInteger"/>
											</xs:complexType>
										</xs:element>
									</xs:sequence>
									<xs:attribute name="rowIdx" use="optional">
										<xs:simpleType>
											<xs:restriction base="xs:int">
												<xs:minInclusive value="-1"/>
											</xs:restriction>
										</xs:simpleType>
									</xs:attribute>
									<xs:attribute name="colIdx" use="optional">
										<xs:simpleType>
											<xs:restriction base="xs:int">
												<xs:minInclusive value="-2"/>
											</xs:restriction>
										</xs:simpleType>
									</xs:attribute>
									<xs:attribute name="additiveConstant" type="xs:double" use="optional" default="0"/>
									<xs:attribute name="processMode" use="optional" default="add">
										<xs:simpleType>
											<xs:restriction base="xs:string">
												<xs:enumeration value="add"/>
												<xs:enumeration value="multiply"/>
												<xs:enumeration value="replace"/>
											</xs:restriction>
										</xs:simpleType>
									</xs:attribute>
								</xs:complexType>
							</xs:element>
						</xs:sequence>
					</xs:complexType>
				</xs:element>
			</xs:choice>
			<xs:element name="penalties" minOccurs="0">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="numberPenalties">
							<xs:complexType>
								<xs:sequence>
									<xs:element name="simpleRecourse" type="xs:nonNegativeInteger"/>
									<xs:element name="robustOptimization" type="xs:nonNegativeInteger"/>
									<xs:element name="piecewiseLinearQuadratic" type="xs:nonNegativeInteger"/>
									<xs:element name="userDefinedPenalty" type="xs:nonNegativeInteger"/>
								</xs:sequence>
								<xs:attribute name="num" type="xs:nonNegativeInteger"/>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="riskMeasures" minOccurs="0">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="numberRiskMeasures">
							<xs:complexType>
								<xs:sequence>
									<xs:element name="simpleChance" type="xs:nonNegativeInteger"/>
									<xs:element name="jointChance" type="xs:nonNegativeInteger"/>
									<xs:element name="integratedChance" type="xs:nonNegativeInteger"/>
								</xs:sequence>
								<xs:attribute name="num" type="xs:nonNegativeInteger"/>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="UserFunctionAnalysis">
		<xs:annotation>
			<xs:documentation>experiment</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="userFunction" type="UserFAnalysis" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="UserFAnalysis">
		<xs:annotation>
			<xs:documentation>experiment</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="rowsIn" type="IntVector"/>
			<xs:element name="other" type="OtherAnalysis" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="SimulationAnalysis">
		<xs:annotation>
			<xs:documentation>experiment</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="simulation" type="SimAnalysis" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="SimAnalysis">
		<xs:annotation>
			<xs:documentation>experiment</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="time" minOccurs="0">
				<xs:complexType>
					<xs:attribute name="average" type="xs:double" use="optional"/>
					<xs:attribute name="deviation" type="xs:double" use="optional"/>
				</xs:complexType>
			</xs:element>
			<xs:element name="rowsIn" type="IntVector" minOccurs="0"/>
			<xs:element name="other" type="OtherAnalysis" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="RealTimeDataAnalysis">
		<xs:annotation>
			<xs:documentation>experiment</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="other" type="OtherAnalysis" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
		<xs:attribute name="numberData" type="xs:int"/>
		<xs:attribute name="numberLevels"/>
	</xs:complexType>
	<xs:complexType name="XMLDataAnalysis">
		<xs:annotation>
			<xs:documentation>experiment</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="other" type="OtherAnalysis" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
		<xs:attribute name="numberData" type="xs:int" use="optional"/>
		<xs:attribute name="numberLevels" type="xs:int" use="optional"/>
	</xs:complexType>
	<xs:complexType name="NetworkAndGraphAnalysis">
		<xs:annotation>
			<xs:documentation>experiment</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="nodeProperties">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="property">
							<xs:complexType>
								<xs:attribute name="name" type="xs:ID" use="required"/>
								<xs:attribute name="default" type="xs:string" use="optional"/>
								<xs:attribute name="isVariable" type="xs:boolean" use="optional" default="false"/>
								<xs:attribute name="variableType" type="GeneralEnumerationVarType" use="optional" default="C"/>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="arcProperties">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="property">
							<xs:complexType>
								<xs:attribute name="name" type="xs:ID" use="required"/>
								<xs:attribute name="default" type="xs:string" use="optional"/>
								<xs:attribute name="isVariable" type="xs:boolean" use="optional" default="false"/>
								<xs:attribute name="variableType" type="GeneralEnumerationVarType" use="optional" default="C"/>
							</xs:complexType>
						</xs:element>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="nodes">
				<xs:complexType>
					<xs:attribute name="numberNodes" type="xs:nonNegativeInteger" use="required"/>
					<xs:attribute name="declaration" use="optional" default="list">
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:enumeration value="list"/>
								<xs:enumeration value="positiveInteger"/>
								<xs:enumeration value="declaredInArcs"/>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
					<xs:attribute name="axisType" use="optional" default="none">
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:enumeration value="none"/>
								<xs:enumeration value="explicit"/>
								<xs:enumeration value="x"/>
								<xs:enumeration value="xy"/>
								<xs:enumeration value="xyz"/>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
			<xs:element name="arcs">
				<xs:complexType>
					<xs:attribute name="numberArcs" type="xs:nonNegativeInteger" use="required"/>
					<xs:attribute name="declaration" use="optional" default="list">
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:enumeration value="list"/>
								<xs:enumeration value="positiveInteger"/>
								<xs:enumeration value="betweenAllNodeParis"/>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
					<xs:attribute name="weightType" use="optional" default="none">
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:enumeration value="none"/>
								<xs:enumeration value="explicit"/>
								<xs:enumeration value="euc2D"/>
								<xs:enumeration value="euc3D"/>
								<xs:enumeration value="max2D"/>
								<xs:enumeration value="max3D"/>
								<xs:enumeration value="man2D"/>
								<xs:enumeration value="man3D"/>
								<xs:enumeration value="ceil2D"/>
								<xs:enumeration value="geo"/>
								<xs:enumeration value="att"/>
								<xs:enumeration value="xray1"/>
								<xs:enumeration value="xray2"/>
								<xs:enumeration value="special"/>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
				</xs:complexType>
			</xs:element>
			<xs:element name="specific" type="MapType" minOccurs="0"/>
		</xs:sequence>
		<xs:attribute name="name" type="xs:string" use="optional"/>
		<xs:attribute name="type" use="optional" default="undirected">
			<xs:simpleType>
				<xs:restriction base="xs:string">
					<xs:enumeration value="undirected"/>
					<xs:enumeration value="directed"/>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
		<xs:attribute name="hasVariableProperty" type="xs:boolean" use="optional" default="true"/>
	</xs:complexType>
	<xs:complexType name="NonNegativeIntVectorWithStrictAttribute">
		<xs:annotation>
			<xs:documentation>draft</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="el" type="NonNegativeIntWithStrictAttribute" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
		<xs:attribute name="numberOfEl" type="xs:nonNegativeInteger" use="required"/>
	</xs:complexType>
	<xs:complexType name="NonNegativeIntWithStrictAttribute">
		<xs:annotation>
			<xs:documentation>draft</xs:documentation>
		</xs:annotation>
		<xs:simpleContent>
			<xs:extension base="xs:nonNegativeInteger">
				<xs:attribute name="strict" type="xs:boolean" use="optional"/>
				<xs:attribute name="mult" type="xs:positiveInteger" use="optional" default="1"/>
				<xs:attribute name="incr" type="xs:int" use="optional" default="0">
					<xs:annotation>
						<xs:documentation>NEW in release 2.2.1</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:complexType name="NonNegativeIntVectorWithOrderAttribute">
		<xs:annotation>
			<xs:documentation>draft</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="el" type="NonNegativeIntWithOrderAttribute" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
		<xs:attribute name="numberOfEl" type="xs:nonNegativeInteger" use="required"/>
	</xs:complexType>
	<xs:complexType name="NonNegativeIntWithOrderAttribute">
		<xs:annotation>
			<xs:documentation>draft</xs:documentation>
		</xs:annotation>
		<xs:simpleContent>
			<xs:extension base="xs:nonNegativeInteger">
				<xs:attribute name="order" use="optional" default="1">
					<xs:simpleType>
						<xs:restriction base="xs:int">
							<xs:minInclusive value="1"/>
						</xs:restriction>
					</xs:simpleType>
				</xs:attribute>
				<xs:attribute name="mult" type="xs:positiveInteger" use="optional" default="1"/>
				<xs:attribute name="incr" type="xs:int" use="optional" default="0">
					<xs:annotation>
						<xs:documentation>NEW in release 2.2.1</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:complexType name="NegativeIntVectorWithStrictAttribute">
		<xs:annotation>
			<xs:documentation>draft</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="el" type="NegativeIntWithStrictAttribute" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
		<xs:attribute name="numberOfEl" type="xs:nonNegativeInteger" use="required"/>
	</xs:complexType>
	<xs:complexType name="NegativeIntWithStrictAttribute">
		<xs:annotation>
			<xs:documentation>draft</xs:documentation>
		</xs:annotation>
		<xs:simpleContent>
			<xs:extension base="xs:negativeInteger">
				<xs:attribute name="strict" type="xs:boolean" use="optional"/>
				<xs:attribute name="mult" type="xs:positiveInteger" use="optional" default="1"/>
				<xs:attribute name="incr" type="xs:int" use="optional" default="0">
					<xs:annotation>
						<xs:documentation>NEW in release 2.2.1</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:complexType name="NegativeIntVectorWithOrderAttribute">
		<xs:annotation>
			<xs:documentation>draft</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="el" type="NegativeIntWithOrderAttribute" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
		<xs:attribute name="numberOfEl" type="xs:nonNegativeInteger" use="required"/>
	</xs:complexType>
	<xs:complexType name="NegativeIntWithOrderAttribute">
		<xs:annotation>
			<xs:documentation>draft</xs:documentation>
		</xs:annotation>
		<xs:simpleContent>
			<xs:extension base="xs:negativeInteger">
				<xs:attribute name="order" use="optional" default="1">
					<xs:simpleType>
						<xs:restriction base="xs:int">
							<xs:minInclusive value="1"/>
						</xs:restriction>
					</xs:simpleType>
				</xs:attribute>
				<xs:attribute name="mult" type="xs:positiveInteger" use="optional" default="1"/>
				<xs:attribute name="incr" type="xs:int" use="optional" default="0">
					<xs:annotation>
						<xs:documentation>NEW in release 2.2.1</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
</xs:schema>
