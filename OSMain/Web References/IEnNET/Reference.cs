//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.2032
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 1.1.4322.2032.
// 
namespace IEnNET {
    using System.Diagnostics;
    using System.Xml.Serialization;
    using System;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Web.Services;
    
    
    /// <remarks/>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="IEnNETBinding", Namespace="http://www.gridlogix.com/WebServices/")]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(GlxRem))]
    public class IEnNETService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        /// <remarks/>
        public IEnNETService() {
            this.Url = "http://192.168.0.182:8090/soap/IEnNET";
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("Gridlogix.EnNET.Types.IEnNET#Login", RequestNamespace="Gridlogix.EnNET.Types.IEnNET", ResponseNamespace="Gridlogix.EnNET.Types.IEnNET")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string Login(string UserName, string Password) {
            object[] results = this.Invoke("Login", new object[] {
                        UserName,
                        Password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLogin(string UserName, string Password, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Login", new object[] {
                        UserName,
                        Password}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndLogin(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("Gridlogix.EnNET.Types.IEnNET#Logout", RequestNamespace="Gridlogix.EnNET.Types.IEnNET", ResponseNamespace="Gridlogix.EnNET.Types.IEnNET")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public bool Logout(string Token) {
            object[] results = this.Invoke("Logout", new object[] {
                        Token});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginLogout(string Token, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Logout", new object[] {
                        Token}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndLogout(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("Gridlogix.EnNET.Types.IEnNET#Ping", RequestNamespace="Gridlogix.EnNET.Types.IEnNET", ResponseNamespace="Gridlogix.EnNET.Types.IEnNET")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public bool Ping() {
            object[] results = this.Invoke("Ping", new object[0]);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginPing(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Ping", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndPing(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("Gridlogix.EnNET.Types.IEnNET#Version", RequestNamespace="Gridlogix.EnNET.Types.IEnNET", ResponseNamespace="Gridlogix.EnNET.Types.IEnNET")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public GlxVersionInfo Version() {
            object[] results = this.Invoke("Version", new object[0]);
            return ((GlxVersionInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginVersion(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Version", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public GlxVersionInfo EndVersion(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((GlxVersionInfo)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("Gridlogix.EnNET.Types.IEnNET#SetOptions", RequestNamespace="Gridlogix.EnNET.Types.IEnNET", ResponseNamespace="Gridlogix.EnNET.Types.IEnNET")]
        public void SetOptions(string Token, GlxSessionOptions Options) {
            this.Invoke("SetOptions", new object[] {
                        Token,
                        Options});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSetOptions(string Token, GlxSessionOptions Options, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SetOptions", new object[] {
                        Token,
                        Options}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndSetOptions(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("Gridlogix.EnNET.Types.IEnNET#AssignDisplayName", RequestNamespace="Gridlogix.EnNET.Types.IEnNET", ResponseNamespace="Gridlogix.EnNET.Types.IEnNET")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public bool AssignDisplayName(string Token, string ID, string DisplayName) {
            object[] results = this.Invoke("AssignDisplayName", new object[] {
                        Token,
                        ID,
                        DisplayName});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAssignDisplayName(string Token, string ID, string DisplayName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AssignDisplayName", new object[] {
                        Token,
                        ID,
                        DisplayName}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndAssignDisplayName(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("Gridlogix.EnNET.Types.IEnNET#GetErrorInfo", RequestNamespace="Gridlogix.EnNET.Types.IEnNET", ResponseNamespace="Gridlogix.EnNET.Types.IEnNET")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public object GetErrorInfo(string Token, string ID) {
            object[] results = this.Invoke("GetErrorInfo", new object[] {
                        Token,
                        ID});
            return ((object)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetErrorInfo(string Token, string ID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetErrorInfo", new object[] {
                        Token,
                        ID}, callback, asyncState);
        }
        
        /// <remarks/>
        public object EndGetErrorInfo(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((object)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("Gridlogix.EnNET.Types.IEnNET#GetObject", RequestNamespace="Gridlogix.EnNET.Types.IEnNET", ResponseNamespace="Gridlogix.EnNET.Types.IEnNET")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public GlxObject GetObject(string Token, string ObjectID) {
            object[] results = this.Invoke("GetObject", new object[] {
                        Token,
                        ObjectID});
            return ((GlxObject)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetObject(string Token, string ObjectID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetObject", new object[] {
                        Token,
                        ObjectID}, callback, asyncState);
        }
        
        /// <remarks/>
        public GlxObject EndGetObject(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((GlxObject)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("Gridlogix.EnNET.Types.IEnNET#GetObjects", RequestNamespace="Gridlogix.EnNET.Types.IEnNET", ResponseNamespace="Gridlogix.EnNET.Types.IEnNET")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public GlxObject[] GetObjects(string Token, string ObjectID) {
            object[] results = this.Invoke("GetObjects", new object[] {
                        Token,
                        ObjectID});
            return ((GlxObject[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetObjects(string Token, string ObjectID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetObjects", new object[] {
                        Token,
                        ObjectID}, callback, asyncState);
        }
        
        /// <remarks/>
        public GlxObject[] EndGetObjects(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((GlxObject[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("Gridlogix.EnNET.Types.IEnNET#GetProperty", RequestNamespace="Gridlogix.EnNET.Types.IEnNET", ResponseNamespace="Gridlogix.EnNET.Types.IEnNET")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public GlxProperty GetProperty(string Token, string PropertyID) {
            object[] results = this.Invoke("GetProperty", new object[] {
                        Token,
                        PropertyID});
            return ((GlxProperty)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetProperty(string Token, string PropertyID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetProperty", new object[] {
                        Token,
                        PropertyID}, callback, asyncState);
        }
        
        /// <remarks/>
        public GlxProperty EndGetProperty(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((GlxProperty)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("Gridlogix.EnNET.Types.IEnNET#GetProperties", RequestNamespace="Gridlogix.EnNET.Types.IEnNET", ResponseNamespace="Gridlogix.EnNET.Types.IEnNET")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public GlxProperty[] GetProperties(string Token, string ObjectID) {
            object[] results = this.Invoke("GetProperties", new object[] {
                        Token,
                        ObjectID});
            return ((GlxProperty[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetProperties(string Token, string ObjectID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetProperties", new object[] {
                        Token,
                        ObjectID}, callback, asyncState);
        }
        
        /// <remarks/>
        public GlxProperty[] EndGetProperties(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((GlxProperty[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("Gridlogix.EnNET.Types.IEnNET#GetMethod", RequestNamespace="Gridlogix.EnNET.Types.IEnNET", ResponseNamespace="Gridlogix.EnNET.Types.IEnNET")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public GlxMethod GetMethod(string Token, string MethodID) {
            object[] results = this.Invoke("GetMethod", new object[] {
                        Token,
                        MethodID});
            return ((GlxMethod)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetMethod(string Token, string MethodID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetMethod", new object[] {
                        Token,
                        MethodID}, callback, asyncState);
        }
        
        /// <remarks/>
        public GlxMethod EndGetMethod(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((GlxMethod)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("Gridlogix.EnNET.Types.IEnNET#GetMethods", RequestNamespace="Gridlogix.EnNET.Types.IEnNET", ResponseNamespace="Gridlogix.EnNET.Types.IEnNET")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public GlxMethod[] GetMethods(string Token, string ObjectID) {
            object[] results = this.Invoke("GetMethods", new object[] {
                        Token,
                        ObjectID});
            return ((GlxMethod[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetMethods(string Token, string ObjectID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetMethods", new object[] {
                        Token,
                        ObjectID}, callback, asyncState);
        }
        
        /// <remarks/>
        public GlxMethod[] EndGetMethods(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((GlxMethod[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("Gridlogix.EnNET.Types.IEnNET#InvokeMethod", RequestNamespace="Gridlogix.EnNET.Types.IEnNET", ResponseNamespace="Gridlogix.EnNET.Types.IEnNET")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public object InvokeMethod(string Token, string MethodID, object[] Args) {
            object[] results = this.Invoke("InvokeMethod", new object[] {
                        Token,
                        MethodID,
                        Args});
            return ((object)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginInvokeMethod(string Token, string MethodID, object[] Args, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("InvokeMethod", new object[] {
                        Token,
                        MethodID,
                        Args}, callback, asyncState);
        }
        
        /// <remarks/>
        public object EndInvokeMethod(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((object)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("Gridlogix.EnNET.Types.IEnNET#GetValue", RequestNamespace="Gridlogix.EnNET.Types.IEnNET", ResponseNamespace="Gridlogix.EnNET.Types.IEnNET")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public GlxValue GetValue(string Token, string PropertyID) {
            object[] results = this.Invoke("GetValue", new object[] {
                        Token,
                        PropertyID});
            return ((GlxValue)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetValue(string Token, string PropertyID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetValue", new object[] {
                        Token,
                        PropertyID}, callback, asyncState);
        }
        
        /// <remarks/>
        public GlxValue EndGetValue(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((GlxValue)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("Gridlogix.EnNET.Types.IEnNET#GetValues", RequestNamespace="Gridlogix.EnNET.Types.IEnNET", ResponseNamespace="Gridlogix.EnNET.Types.IEnNET")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public GlxValue[] GetValues(string Token, string[] PropertyIDs) {
            object[] results = this.Invoke("GetValues", new object[] {
                        Token,
                        PropertyIDs});
            return ((GlxValue[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetValues(string Token, string[] PropertyIDs, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetValues", new object[] {
                        Token,
                        PropertyIDs}, callback, asyncState);
        }
        
        /// <remarks/>
        public GlxValue[] EndGetValues(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((GlxValue[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("Gridlogix.EnNET.Types.IEnNET#GetValue2", RequestNamespace="Gridlogix.EnNET.Types.IEnNET", ResponseNamespace="Gridlogix.EnNET.Types.IEnNET")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public object GetValue2(string Token, string PropertyID) {
            object[] results = this.Invoke("GetValue2", new object[] {
                        Token,
                        PropertyID});
            return ((object)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetValue2(string Token, string PropertyID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetValue2", new object[] {
                        Token,
                        PropertyID}, callback, asyncState);
        }
        
        /// <remarks/>
        public object EndGetValue2(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((object)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("Gridlogix.EnNET.Types.IEnNET#GetValues2", RequestNamespace="Gridlogix.EnNET.Types.IEnNET", ResponseNamespace="Gridlogix.EnNET.Types.IEnNET")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public object[] GetValues2(string Token, string[] PropertyIDs) {
            object[] results = this.Invoke("GetValues2", new object[] {
                        Token,
                        PropertyIDs});
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetValues2(string Token, string[] PropertyIDs, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetValues2", new object[] {
                        Token,
                        PropertyIDs}, callback, asyncState);
        }
        
        /// <remarks/>
        public object[] EndGetValues2(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("Gridlogix.EnNET.Types.IEnNET#GetValues3", RequestNamespace="Gridlogix.EnNET.Types.IEnNET", ResponseNamespace="Gridlogix.EnNET.Types.IEnNET")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public object[] GetValues3(string Token, string ObjectID, string[] PropertyIDs) {
            object[] results = this.Invoke("GetValues3", new object[] {
                        Token,
                        ObjectID,
                        PropertyIDs});
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetValues3(string Token, string ObjectID, string[] PropertyIDs, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetValues3", new object[] {
                        Token,
                        ObjectID,
                        PropertyIDs}, callback, asyncState);
        }
        
        /// <remarks/>
        public object[] EndGetValues3(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("Gridlogix.EnNET.Types.IEnNET#GetValues4", RequestNamespace="Gridlogix.EnNET.Types.IEnNET", ResponseNamespace="Gridlogix.EnNET.Types.IEnNET")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public GlxValue[] GetValues4(string Token, string ObjectID, string[] PropertyIDs) {
            object[] results = this.Invoke("GetValues4", new object[] {
                        Token,
                        ObjectID,
                        PropertyIDs});
            return ((GlxValue[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetValues4(string Token, string ObjectID, string[] PropertyIDs, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetValues4", new object[] {
                        Token,
                        ObjectID,
                        PropertyIDs}, callback, asyncState);
        }
        
        /// <remarks/>
        public GlxValue[] EndGetValues4(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((GlxValue[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("Gridlogix.EnNET.Types.IEnNET#GetValues5", RequestNamespace="Gridlogix.EnNET.Types.IEnNET", ResponseNamespace="Gridlogix.EnNET.Types.IEnNET")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public object[][] GetValues5(string Token, string[] ObjectIDs, string[] PropertyIDs) {
            object[] results = this.Invoke("GetValues5", new object[] {
                        Token,
                        ObjectIDs,
                        PropertyIDs});
            return ((object[][])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetValues5(string Token, string[] ObjectIDs, string[] PropertyIDs, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetValues5", new object[] {
                        Token,
                        ObjectIDs,
                        PropertyIDs}, callback, asyncState);
        }
        
        /// <remarks/>
        public object[][] EndGetValues5(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((object[][])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("Gridlogix.EnNET.Types.IEnNET#GetValues6", RequestNamespace="Gridlogix.EnNET.Types.IEnNET", ResponseNamespace="Gridlogix.EnNET.Types.IEnNET")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public GlxValue[][] GetValues6(string Token, string[] ObjectIDs, string[] PropertyIDs) {
            object[] results = this.Invoke("GetValues6", new object[] {
                        Token,
                        ObjectIDs,
                        PropertyIDs});
            return ((GlxValue[][])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetValues6(string Token, string[] ObjectIDs, string[] PropertyIDs, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetValues6", new object[] {
                        Token,
                        ObjectIDs,
                        PropertyIDs}, callback, asyncState);
        }
        
        /// <remarks/>
        public GlxValue[][] EndGetValues6(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((GlxValue[][])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("Gridlogix.EnNET.Types.IEnNET#GetIndexedValues", RequestNamespace="Gridlogix.EnNET.Types.IEnNET", ResponseNamespace="Gridlogix.EnNET.Types.IEnNET")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public object[] GetIndexedValues(string Token, string PropertyID, int Low, int High) {
            object[] results = this.Invoke("GetIndexedValues", new object[] {
                        Token,
                        PropertyID,
                        Low,
                        High});
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetIndexedValues(string Token, string PropertyID, int Low, int High, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetIndexedValues", new object[] {
                        Token,
                        PropertyID,
                        Low,
                        High}, callback, asyncState);
        }
        
        /// <remarks/>
        public object[] EndGetIndexedValues(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("Gridlogix.EnNET.Types.IEnNET#GetDefaultValue", RequestNamespace="Gridlogix.EnNET.Types.IEnNET", ResponseNamespace="Gridlogix.EnNET.Types.IEnNET")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public GlxValue GetDefaultValue(string Token, string ObjectID) {
            object[] results = this.Invoke("GetDefaultValue", new object[] {
                        Token,
                        ObjectID});
            return ((GlxValue)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetDefaultValue(string Token, string ObjectID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetDefaultValue", new object[] {
                        Token,
                        ObjectID}, callback, asyncState);
        }
        
        /// <remarks/>
        public GlxValue EndGetDefaultValue(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((GlxValue)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("Gridlogix.EnNET.Types.IEnNET#GetDefaultValues", RequestNamespace="Gridlogix.EnNET.Types.IEnNET", ResponseNamespace="Gridlogix.EnNET.Types.IEnNET")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public GlxValue[] GetDefaultValues(string Token, string ObjectID) {
            object[] results = this.Invoke("GetDefaultValues", new object[] {
                        Token,
                        ObjectID});
            return ((GlxValue[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetDefaultValues(string Token, string ObjectID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetDefaultValues", new object[] {
                        Token,
                        ObjectID}, callback, asyncState);
        }
        
        /// <remarks/>
        public GlxValue[] EndGetDefaultValues(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((GlxValue[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("Gridlogix.EnNET.Types.IEnNET#GetDefaultValue2", RequestNamespace="Gridlogix.EnNET.Types.IEnNET", ResponseNamespace="Gridlogix.EnNET.Types.IEnNET")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public object GetDefaultValue2(string Token, string ObjectID) {
            object[] results = this.Invoke("GetDefaultValue2", new object[] {
                        Token,
                        ObjectID});
            return ((object)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetDefaultValue2(string Token, string ObjectID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetDefaultValue2", new object[] {
                        Token,
                        ObjectID}, callback, asyncState);
        }
        
        /// <remarks/>
        public object EndGetDefaultValue2(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((object)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("Gridlogix.EnNET.Types.IEnNET#GetDefaultValues2", RequestNamespace="Gridlogix.EnNET.Types.IEnNET", ResponseNamespace="Gridlogix.EnNET.Types.IEnNET")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public object[] GetDefaultValues2(string Token, string[] ObjectIDs) {
            object[] results = this.Invoke("GetDefaultValues2", new object[] {
                        Token,
                        ObjectIDs});
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetDefaultValues2(string Token, string[] ObjectIDs, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetDefaultValues2", new object[] {
                        Token,
                        ObjectIDs}, callback, asyncState);
        }
        
        /// <remarks/>
        public object[] EndGetDefaultValues2(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("Gridlogix.EnNET.Types.IEnNET#GetDefaultValues3", RequestNamespace="Gridlogix.EnNET.Types.IEnNET", ResponseNamespace="Gridlogix.EnNET.Types.IEnNET")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public GlxValue[] GetDefaultValues3(string Token, string[] ObjectIDs) {
            object[] results = this.Invoke("GetDefaultValues3", new object[] {
                        Token,
                        ObjectIDs});
            return ((GlxValue[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetDefaultValues3(string Token, string[] ObjectIDs, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetDefaultValues3", new object[] {
                        Token,
                        ObjectIDs}, callback, asyncState);
        }
        
        /// <remarks/>
        public GlxValue[] EndGetDefaultValues3(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((GlxValue[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("Gridlogix.EnNET.Types.IEnNET#GetPropertyValues", RequestNamespace="Gridlogix.EnNET.Types.IEnNET", ResponseNamespace="Gridlogix.EnNET.Types.IEnNET")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public GlxValue[] GetPropertyValues(string Token, string ObjectID) {
            object[] results = this.Invoke("GetPropertyValues", new object[] {
                        Token,
                        ObjectID});
            return ((GlxValue[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetPropertyValues(string Token, string ObjectID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetPropertyValues", new object[] {
                        Token,
                        ObjectID}, callback, asyncState);
        }
        
        /// <remarks/>
        public GlxValue[] EndGetPropertyValues(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((GlxValue[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("Gridlogix.EnNET.Types.IEnNET#GetPropertyValues2", RequestNamespace="Gridlogix.EnNET.Types.IEnNET", ResponseNamespace="Gridlogix.EnNET.Types.IEnNET")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public object[] GetPropertyValues2(string Token, string ObjectID) {
            object[] results = this.Invoke("GetPropertyValues2", new object[] {
                        Token,
                        ObjectID});
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetPropertyValues2(string Token, string ObjectID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetPropertyValues2", new object[] {
                        Token,
                        ObjectID}, callback, asyncState);
        }
        
        /// <remarks/>
        public object[] EndGetPropertyValues2(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("Gridlogix.EnNET.Types.IEnNET#SetValue", RequestNamespace="Gridlogix.EnNET.Types.IEnNET", ResponseNamespace="Gridlogix.EnNET.Types.IEnNET")]
        public void SetValue(string Token, string PropertyID, object Value) {
            this.Invoke("SetValue", new object[] {
                        Token,
                        PropertyID,
                        Value});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSetValue(string Token, string PropertyID, object Value, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SetValue", new object[] {
                        Token,
                        PropertyID,
                        Value}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndSetValue(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("Gridlogix.EnNET.Types.IEnNET#SetValues", RequestNamespace="Gridlogix.EnNET.Types.IEnNET", ResponseNamespace="Gridlogix.EnNET.Types.IEnNET")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public string[] SetValues(string Token, string[] PropertyIDs, object[] Values) {
            object[] results = this.Invoke("SetValues", new object[] {
                        Token,
                        PropertyIDs,
                        Values});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSetValues(string Token, string[] PropertyIDs, object[] Values, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SetValues", new object[] {
                        Token,
                        PropertyIDs,
                        Values}, callback, asyncState);
        }
        
        /// <remarks/>
        public string[] EndSetValues(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("Gridlogix.EnNET.Types.IEnNET#SetIndexedValues", RequestNamespace="Gridlogix.EnNET.Types.IEnNET", ResponseNamespace="Gridlogix.EnNET.Types.IEnNET")]
        public void SetIndexedValues(string Token, string PropertyID, int Low, object[] Values) {
            this.Invoke("SetIndexedValues", new object[] {
                        Token,
                        PropertyID,
                        Low,
                        Values});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSetIndexedValues(string Token, string PropertyID, int Low, object[] Values, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SetIndexedValues", new object[] {
                        Token,
                        PropertyID,
                        Low,
                        Values}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndSetIndexedValues(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("Gridlogix.EnNET.Types.IEnNET#SetDefaultValue", RequestNamespace="Gridlogix.EnNET.Types.IEnNET", ResponseNamespace="Gridlogix.EnNET.Types.IEnNET")]
        public void SetDefaultValue(string Token, string ObjectID, object Value) {
            this.Invoke("SetDefaultValue", new object[] {
                        Token,
                        ObjectID,
                        Value});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSetDefaultValue(string Token, string ObjectID, object Value, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SetDefaultValue", new object[] {
                        Token,
                        ObjectID,
                        Value}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndSetDefaultValue(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("Gridlogix.EnNET.Types.IEnNET#AddGroup", RequestNamespace="Gridlogix.EnNET.Types.IEnNET", ResponseNamespace="Gridlogix.EnNET.Types.IEnNET")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public GlxObject AddGroup(string Token, string ParentID, string NewGroup) {
            object[] results = this.Invoke("AddGroup", new object[] {
                        Token,
                        ParentID,
                        NewGroup});
            return ((GlxObject)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAddGroup(string Token, string ParentID, string NewGroup, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AddGroup", new object[] {
                        Token,
                        ParentID,
                        NewGroup}, callback, asyncState);
        }
        
        /// <remarks/>
        public GlxObject EndAddGroup(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((GlxObject)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("Gridlogix.EnNET.Types.IEnNET#AddGroupItem", RequestNamespace="Gridlogix.EnNET.Types.IEnNET", ResponseNamespace="Gridlogix.EnNET.Types.IEnNET")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public bool AddGroupItem(string Token, string GroupID, string ID) {
            object[] results = this.Invoke("AddGroupItem", new object[] {
                        Token,
                        GroupID,
                        ID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAddGroupItem(string Token, string GroupID, string ID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AddGroupItem", new object[] {
                        Token,
                        GroupID,
                        ID}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndAddGroupItem(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("Gridlogix.EnNET.Types.IEnNET#AddGroupItems", RequestNamespace="Gridlogix.EnNET.Types.IEnNET", ResponseNamespace="Gridlogix.EnNET.Types.IEnNET")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public bool[] AddGroupItems(string Token, string GroupID, string[] IDs) {
            object[] results = this.Invoke("AddGroupItems", new object[] {
                        Token,
                        GroupID,
                        IDs});
            return ((bool[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAddGroupItems(string Token, string GroupID, string[] IDs, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AddGroupItems", new object[] {
                        Token,
                        GroupID,
                        IDs}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool[] EndAddGroupItems(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("Gridlogix.EnNET.Types.IEnNET#GetGroupValues", RequestNamespace="Gridlogix.EnNET.Types.IEnNET", ResponseNamespace="Gridlogix.EnNET.Types.IEnNET")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public GlxValue[] GetGroupValues(string Token, string GroupID) {
            object[] results = this.Invoke("GetGroupValues", new object[] {
                        Token,
                        GroupID});
            return ((GlxValue[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetGroupValues(string Token, string GroupID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetGroupValues", new object[] {
                        Token,
                        GroupID}, callback, asyncState);
        }
        
        /// <remarks/>
        public GlxValue[] EndGetGroupValues(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((GlxValue[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("Gridlogix.EnNET.Types.IEnNET#GetGroupValues2", RequestNamespace="Gridlogix.EnNET.Types.IEnNET", ResponseNamespace="Gridlogix.EnNET.Types.IEnNET")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public object[] GetGroupValues2(string Token, string GroupID) {
            object[] results = this.Invoke("GetGroupValues2", new object[] {
                        Token,
                        GroupID});
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetGroupValues2(string Token, string GroupID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetGroupValues2", new object[] {
                        Token,
                        GroupID}, callback, asyncState);
        }
        
        /// <remarks/>
        public object[] EndGetGroupValues2(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("Gridlogix.EnNET.Types.IEnNET#RemoveGroup", RequestNamespace="Gridlogix.EnNET.Types.IEnNET", ResponseNamespace="Gridlogix.EnNET.Types.IEnNET")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public bool RemoveGroup(string Token, string GroupID) {
            object[] results = this.Invoke("RemoveGroup", new object[] {
                        Token,
                        GroupID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginRemoveGroup(string Token, string GroupID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("RemoveGroup", new object[] {
                        Token,
                        GroupID}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndRemoveGroup(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("Gridlogix.EnNET.Types.IEnNET#BeginUpdate", RequestNamespace="Gridlogix.EnNET.Types.IEnNET", ResponseNamespace="Gridlogix.EnNET.Types.IEnNET")]
        public void BeginUpdate(string Token, string ObjectID) {
            this.Invoke("BeginUpdate", new object[] {
                        Token,
                        ObjectID});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginBeginUpdate(string Token, string ObjectID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("BeginUpdate", new object[] {
                        Token,
                        ObjectID}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndBeginUpdate(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("Gridlogix.EnNET.Types.IEnNET#EndUpdate", RequestNamespace="Gridlogix.EnNET.Types.IEnNET", ResponseNamespace="Gridlogix.EnNET.Types.IEnNET")]
        public void EndUpdate(string Token, string ObjectID) {
            this.Invoke("EndUpdate", new object[] {
                        Token,
                        ObjectID});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginEndUpdate(string Token, string ObjectID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("EndUpdate", new object[] {
                        Token,
                        ObjectID}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndEndUpdate(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("Gridlogix.EnNET.Types.IEnNET#AddObject", RequestNamespace="Gridlogix.EnNET.Types.IEnNET", ResponseNamespace="Gridlogix.EnNET.Types.IEnNET")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public GlxObject AddObject(string Token, string ParentID, GlxIdentifier ID, string[] PropertyIDs, object[] Values) {
            object[] results = this.Invoke("AddObject", new object[] {
                        Token,
                        ParentID,
                        ID,
                        PropertyIDs,
                        Values});
            return ((GlxObject)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAddObject(string Token, string ParentID, GlxIdentifier ID, string[] PropertyIDs, object[] Values, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AddObject", new object[] {
                        Token,
                        ParentID,
                        ID,
                        PropertyIDs,
                        Values}, callback, asyncState);
        }
        
        /// <remarks/>
        public GlxObject EndAddObject(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((GlxObject)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("Gridlogix.EnNET.Types.IEnNET#RemoveObject", RequestNamespace="Gridlogix.EnNET.Types.IEnNET", ResponseNamespace="Gridlogix.EnNET.Types.IEnNET")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public bool RemoveObject(string Token, string ParentID, string ObjectName) {
            object[] results = this.Invoke("RemoveObject", new object[] {
                        Token,
                        ParentID,
                        ObjectName});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginRemoveObject(string Token, string ParentID, string ObjectName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("RemoveObject", new object[] {
                        Token,
                        ParentID,
                        ObjectName}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndRemoveObject(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("Gridlogix.EnNET.Types.IEnNET#GetClassProperties", RequestNamespace="Gridlogix.EnNET.Types.IEnNET", ResponseNamespace="Gridlogix.EnNET.Types.IEnNET")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public GlxProperty[] GetClassProperties(string Token, string ClassName, string AccessRights, string Scopes) {
            object[] results = this.Invoke("GetClassProperties", new object[] {
                        Token,
                        ClassName,
                        AccessRights,
                        Scopes});
            return ((GlxProperty[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetClassProperties(string Token, string ClassName, string AccessRights, string Scopes, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetClassProperties", new object[] {
                        Token,
                        ClassName,
                        AccessRights,
                        Scopes}, callback, asyncState);
        }
        
        /// <remarks/>
        public GlxProperty[] EndGetClassProperties(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((GlxProperty[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("Gridlogix.EnNET.Types.IEnNET#Reserved4", RequestNamespace="Gridlogix.EnNET.Types.IEnNET", ResponseNamespace="Gridlogix.EnNET.Types.IEnNET")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public GlxAccessRight Reserved4() {
            object[] results = this.Invoke("Reserved4", new object[0]);
            return ((GlxAccessRight)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginReserved4(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Reserved4", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public GlxAccessRight EndReserved4(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((GlxAccessRight)(results[0]));
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("GlxVersionInfo", "Gridlogix.EnNET.Types")]
    public class GlxVersionInfo : GlxNode {
        
        /// <remarks/>
        public int Major;
        
        /// <remarks/>
        public int Minor;
        
        /// <remarks/>
        public int Release;
        
        /// <remarks/>
        public int BuildNumber;
        
        /// <remarks/>
        public string BuildVer;
        
        /// <remarks/>
        public string VerDate;
        
        /// <remarks/>
        public string Encoding;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("GlxNode", "Gridlogix.EnNET.Types")]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(GlxParameter))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(GlxMethod))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(GlxProperty))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(GlxObject))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(GlxTypeInfo))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(GlxVersionInfo))]
    public class GlxNode : GlxRem {
        
        /// <remarks/>
        public GlxIdentifier Identifier;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("GlxIdentifier", "Gridlogix.EnNET.Types")]
    public class GlxIdentifier : GlxRem {
        
        /// <remarks/>
        public string ID;
        
        /// <remarks/>
        public string Name;
        
        /// <remarks/>
        public string DisplayName;
        
        /// <remarks/>
        public int Index;
        
        /// <remarks/>
        public GlxMemberScope Scope;
        
        /// <remarks/>
        public string ClassID;
        
        /// <remarks/>
        public int TypeID;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("GlxMemberScope", "Gridlogix.EnNET.Types")]
    public enum GlxMemberScope {
        
        /// <remarks/>
        msPrivate,
        
        /// <remarks/>
        msProtected,
        
        /// <remarks/>
        msPublished,
        
        /// <remarks/>
        msPublic,
        
        /// <remarks/>
        msPointer,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("GlxRem", "Gridlogix.EnNET.Types")]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(GlxValue))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(GlxSessionOptions))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(GlxIdentifier))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(GlxNode))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(GlxParameter))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(GlxMethod))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(GlxProperty))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(GlxObject))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(GlxTypeInfo))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(GlxVersionInfo))]
    public class GlxRem {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("GlxRange", "Gridlogix.EnNET.Types")]
    public class GlxRange {
        
        /// <remarks/>
        public int Low;
        
        /// <remarks/>
        public int High;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("GlxValue", "Gridlogix.EnNET.Types")]
    public class GlxValue : GlxRem {
        
        /// <remarks/>
        public System.UInt16 DataType;
        
        /// <remarks/>
        public int ErrorID;
        
        /// <remarks/>
        public int QualityID;
        
        /// <remarks/>
        public string Reference;
        
        /// <remarks/>
        public GlxDataSource Source;
        
        /// <remarks/>
        public GlxItemState State;
        
        /// <remarks/>
        public System.DateTime Timestamp;
        
        /// <remarks/>
        public object Value;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("GlxDataSource", "Gridlogix.EnNET.Types")]
    public enum GlxDataSource {
        
        /// <remarks/>
        dsDeviceRead,
        
        /// <remarks/>
        dsRemoteCache,
        
        /// <remarks/>
        dsLocalCache,
        
        /// <remarks/>
        dsLocalProperty,
        
        /// <remarks/>
        dsTrap,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("GlxItemState", "Gridlogix.EnNET.Types")]
    public enum GlxItemState {
        
        /// <remarks/>
        Undefined,
        
        /// <remarks/>
        Disabled,
        
        /// <remarks/>
        Null,
        
        /// <remarks/>
        Error,
        
        /// <remarks/>
        Normal,
        
        /// <remarks/>
        Warning,
        
        /// <remarks/>
        Critical,
        
        /// <remarks/>
        BackToNormal,
        
        /// <remarks/>
        BackToWarning,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("GlxSessionOptions", "Gridlogix.EnNET.Types")]
    public class GlxSessionOptions : GlxRem {
        
        /// <remarks/>
        public int LocaleID;
        
        /// <remarks/>
        public bool Strings;
        
        /// <remarks/>
        public bool StringArrays;
        
        /// <remarks/>
        public string Advanced;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("GlxParameter", "Gridlogix.EnNET.Types")]
    public class GlxParameter : GlxNode {
        
        /// <remarks/>
        public bool IsOptional;
        
        /// <remarks/>
        public object DefaultValue;
        
        /// <remarks/>
        public GlxTypeInfo TypeInfo;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("GlxTypeInfo", "Gridlogix.EnNET.Types")]
    public class GlxTypeInfo : GlxObject {
        
        /// <remarks/>
        public System.UInt16 VarType;
        
        /// <remarks/>
        public int Low;
        
        /// <remarks/>
        public int High;
        
        /// <remarks/>
        public object Names;
        
        /// <remarks/>
        public GlxTypeInfo ElementType;
        
        /// <remarks/>
        public string MimeType;
        
        /// <remarks/>
        public string XSType;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("GlxObject", "Gridlogix.EnNET.Types")]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(GlxTypeInfo))]
    public class GlxObject : GlxNode {
        
        /// <remarks/>
        public int ObjectCount;
        
        /// <remarks/>
        public int PropertyCount;
        
        /// <remarks/>
        public int MethodCount;
        
        /// <remarks/>
        public string DefaultProperty;
        
        /// <remarks/>
        public string Interfaces;
        
        /// <remarks/>
        public string ListClass;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("GlxMethod", "Gridlogix.EnNET.Types")]
    public class GlxMethod : GlxNode {
        
        /// <remarks/>
        public GlxParameter[] Parameters;
        
        /// <remarks/>
        public GlxTypeInfo ReturnType;
        
        /// <remarks/>
        public string IFace;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("GlxProperty", "Gridlogix.EnNET.Types")]
    public class GlxProperty : GlxNode {
        
        /// <remarks/>
        public string AccessRight;
        
        /// <remarks/>
        public GlxTypeInfo TypeInfo;
        
        /// <remarks/>
        public bool Indexed;
        
        /// <remarks/>
        public GlxRange Indices;
        
        /// <remarks/>
        public string Units;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapTypeAttribute("GlxAccessRight", "Gridlogix.EnNET.Types")]
    public enum GlxAccessRight {
        
        /// <remarks/>
        arRead,
        
        /// <remarks/>
        arWrite,
        
        /// <remarks/>
        arConfig,
        
        /// <remarks/>
        arStream,
    }
}
